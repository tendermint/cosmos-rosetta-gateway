// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"
	http "net/http"

	mock "github.com/stretchr/testify/mock"

	openapi "github.com/tendermint/cosmos-rosetta-gateway/cosmos/launchpad/client/sdk/generated"
)

// CosmosTendermintAPI is an autogenerated mock type for the CosmosTendermintAPI type
type CosmosTendermintAPI struct {
	mock.Mock
}

// NodeInfoGet provides a mock function with given fields: ctx
func (_m *CosmosTendermintAPI) NodeInfoGet(ctx context.Context) (openapi.InlineResponse200, *http.Response, error) {
	ret := _m.Called(ctx)

	var r0 openapi.InlineResponse200
	if rf, ok := ret.Get(0).(func(context.Context) openapi.InlineResponse200); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(openapi.InlineResponse200)
	}

	var r1 *http.Response
	if rf, ok := ret.Get(1).(func(context.Context) *http.Response); ok {
		r1 = rf(ctx)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(context.Context) error); ok {
		r2 = rf(ctx)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}
